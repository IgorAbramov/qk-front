{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1937:function(e,t,n){\"use strict\";(function(e){function o(e){return f.ItemIsFile&e?\"file\":f.ItemIsDir&e?\"directory\":f.ItemIsSymlink&e?\"symlink\":void 0}function r(e){return f.ItemRemoved&e?\"deleted\":f.ItemRenamed&e?\"moved\":f.ItemCreated&e?\"created\":f.ItemModified&e?\"modified\":f.RootChanged&e?\"root-changed\":f.ItemCloned&e?\"cloned\":function(e){for(let t in e)if(e[t])return!0;return!1}(e)?\"modified\":\"unknown\"}function i(e){return{inode:!!(f.ItemInodeMetaMod&e),finder:!!(f.ItemFinderInfoMod&e),access:!!(f.ItemChangeOwner&e),xattrs:!!(f.ItemXattrMod&e)}}if(\"darwin\"!==e.platform)throw new Error(`Module 'fsevents' is not compatible with platform '${e.platform}'`);const a=n(1939),f=a.constants;t.watch=function(e,t,n){if(\"string\"!=typeof e)throw new TypeError(`fsevents argument 1 must be a string and not a ${typeof e}`);if(\"function\"==typeof t&&void 0===n&&(n=t,t=a.flags.SinceNow),\"number\"!=typeof t)throw new TypeError(`fsevents argument 2 must be a number and not a ${typeof t}`);if(\"function\"!=typeof n)throw new TypeError(`fsevents argument 3 must be a function and not a ${typeof n}`);let o=a.start(a.global,e,t,n);if(!o)throw new Error(`could not watch: ${e}`);return()=>{const e=o?Promise.resolve(o).then(a.stop):Promise.resolve(void 0);return o=void 0,e}},t.getInfo=function(e,t){return{path:e,flags:t,event:r(t),type:o(t),changes:i(t)}},t.constants=f}).call(this,n(14))},1939:function(){throw new Error(\"Module parse failed: Unexpected character 'ï¿½' (1:0)\\nYou may need an appropriate loader to handle this file type.\\n(Source code omitted for this binary file)\")}}]);","extractedComments":[]}